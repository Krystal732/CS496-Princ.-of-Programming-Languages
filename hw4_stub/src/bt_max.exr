
(* Max exercise *)

let n_left = { data <= 12; left <= 0; right <= 0}    (* 0 in head signals null *)
in let n_right = { data <= 44; left <= 0; right <= 0}
in let n_root = { data <= 33; left <= n_left ; right <= n_right }
in let t1 = { root <= n_root ; size <= 3}  
in letrec max_bt_helper(node) = 
   	      if number?(node)
	        then 0
          else if ( (max_bt_helper node.left) > (max_bt_helper node.right) )
            then (max_bt_helper node.left)
          else if ( (max_bt_helper node.right) > (max_bt_helper node.left) )
            then (max_bt_helper node.right)
          else node.data + 0
in let max_bt = proc (t) { (max_bt_helper t.root) }
in (max_bt t1)
